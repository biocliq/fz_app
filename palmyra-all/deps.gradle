def versions = [ spring: '5.2.4.RELEASE', spring_security: '5.2.1.RELEASE',
	spring_boot:'2.2.0.RELEASE',poi:'4.1.1',ehcache:'3.8.1',
	dbcp2:'2.7.0', jdbc_mariadb:'2.5.4',jdbc_pgsql:'42.2.11',jdbc_mssql:'7.4.1.jre11',
	servlet_api:'4.0.1', aws_sdk:'1.11.492', jackson:'2.10.3',
	groovy:'3.0.2', velocity:'1.7',slf4j:"1.7.30",sql2o : "1.6.0",
	quartz:'2.2.1', jetty:'10.0.5', aws:'1.11.678',
	httpcomponents:'4.5.10',tika_core:'1.23',commons_codec:'1.13',
	commons_email:'1.5', commons_io:"2.6", commons_lang3:"3.7",
	xmlapi:"1.0.b2", tus_server:"1.0.0-2.0",sfm:"8.2.3",tus_client:"0.4.1"]

def spring = [
	webmvc: "org.springframework:spring-webmvc:${versions.spring}",
	web: "org.springframework:spring-web:${versions.spring}",
	test:"org.springframework:spring-test:${versions.spring}",
	boot_web:"org.springframework.boot:spring-boot-starter-web:${versions.spring_boot}",
	boot_jetty:"org.springframework.boot:spring-boot-starter-jetty:${versions.spring_boot}",
	boot_tomcat:"org.springframework.boot:spring-boot-starter-tomcat",
	jdbc : "org.springframework:spring-jdbc:${versions.spring}",
	context : "org.springframework:spring-context:${versions.spring}",
	core : "org.springframework:spring-core:${versions.spring}",
	spring_tx : "org.springframework:spring-tx:${versions.spring}",
	//mock : "org.springframework:spring-mock:${versions.spring}",
	security_web: "org.springframework.security:spring-security-web:${versions.spring_security}",
	context_support : "org.springframework:spring-context-support:${versions.spring_security}"
]

def jackson = [
	annotations: "com.fasterxml.jackson.core:jackson-annotations:${versions.jackson}",
	core: "com.fasterxml.jackson.core:jackson-core:${versions.jackson}",
	databind: "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}"
]

def zitlab = [
	fileprocessor : "com.zitlab.util:fileprocessor:0.1",
	shared : "com.zitlab.palmyra.common:api2db-shared:1.0.0"]

def apache = [
	commons: [ codec : "commons-codec:commons-codec:${versions.commons_codec}",
		email: "org.apache.commons:commons-email:${versions.commons_email}",
		io :"commons-io:commons-io:${versions.commons_io}",
		lang3:"org.apache.commons:commons-lang3:${versions.commons_lang3}",
		dbcp2: "org.apache.commons:commons-dbcp2:${versions.dbcp2}",
		fileupload:"commons-fileupload:commons-fileupload:1.3.1"
	],
	http: [ client:"org.apache.httpcomponents:httpclient:${versions.httpcomponents}",
		mime:"org.apache.httpcomponents:httpmime:${versions.httpcomponents}"
	],
	poi:[ ooxml:"org.apache.poi:poi-ooxml:${versions.poi}",
		base:"org.apache.poi:poi:${versions.poi}"
	],
	tika :[core:"org.apache.tika:tika-core:${versions.tika_core}"],
	velocity : "org.apache.velocity:velocity:${versions.velocity}",
	//ddlutils : "org.apache.ddlutils:ddlutils:1.1",
	log4j2:[ core:"org.apache.logging.log4j:log4j-api:2.12.1",
		api:"org.apache.logging.log4j:log4j-core:2.12.1",
		slf4j:"org.apache.logging.log4j:log4j-slf4j-impl:2.12.1"]
]

def log = [
	slf4j: [ api:"org.slf4j:slf4j-api:${versions.slf4j}",
		log4j12:"org.slf4j:slf4j-log4j12:${versions.slf4j}"
	]
]


def jetty = [
	servlet: "org.eclipse.jetty:jetty-servlet:${versions.jetty}",
	proxy: "org.eclipse.jetty:jetty-proxy:${versions.jetty}"
]

def com = [
	amazon : [
		s3:"com.amazonaws:aws-java-sdk-s3:${versions.aws}",
		sqs:"com.amazonaws:aws-java-sdk-sqs:${versions.aws}"
	]
]

def org = [
	groovy : "org.codehaus.groovy:groovy:${versions.groovy}",
	quartz : "org.quartz-scheduler:quartz:${versions.quartz}",
	sfm : [ jdbc : "org.simpleflatmapper:sfm-jdbc:${versions.sfm}",
		sql2o : "org.simpleflatmapper:sfm-sql2o:${versions.sfm}",
		util : "org.simpleflatmapper:sfm-util:${versions.sfm}"],
	sql2o : "org.sql2o:sql2o:${versions.sql2o}",
	tus : [client : "io.tus.java.client:tus-java-client:${versions.tus_client}",
		server : "me.desair.tus:tus-java-server:${versions.tus_server}"],
	xmlapi : "xml-apis:xml-apis:${versions.xmlapi}",
	ehcache : "org.ehcache:ehcache:${versions.ehcache}"
]

def jdbc = [mariadb:"org.mariadb.jdbc:mariadb-java-client:${versions.jdbc_mariadb}",
	pgsql : "org.postgresql:postgresql:${versions.jdbc_pgsql}",
	mssql : "com.microsoft.sqlserver:mssql-jdbc:${versions.jdbc_mssql}",
	hsqldb : "org.hsqldb:hsqldb:2.5.1",
	h2 : "com.h2database:h2:1.4.200"
]

def javax = [
	servlet : "javax.servlet:javax.servlet-api:${versions.servlet_api}"
]

ext.deps = [ 'spring': spring, 'jackson': jackson, 'apache': apache, 'log' : log,
	'jetty': jetty, 'org':org, 'com':com, 'javax':javax, 'jdbc':jdbc, 'zitlab':zitlab ]

